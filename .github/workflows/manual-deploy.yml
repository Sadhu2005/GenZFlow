name: Manual Deploy to Hostinger

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging
      deploy_frontend:
        description: 'Deploy Frontend'
        required: true
        default: true
        type: boolean
      deploy_backend:
        description: 'Deploy Backend'
        required: true
        default: true
        type: boolean
      run_migrations:
        description: 'Run Database Migrations'
        required: true
        default: false
        type: boolean

jobs:
  manual-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build Frontend
      if: ${{ inputs.deploy_frontend }}
      run: |
        cd frontend
        npm install
        npm run build
        echo "Frontend build completed"
    
    - name: Prepare Backend
      if: ${{ inputs.deploy_backend }}
      run: |
        cd backend
        npm install --production
        echo "Backend prepared for deployment"
    
    - name: Deploy Frontend
      if: ${{ inputs.deploy_frontend }}
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.HOSTINGER_FTP_HOST }}
        username: ${{ secrets.HOSTINGER_FTP_USERNAME }}
        password: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
        local-dir: ./frontend/dist/
        server-dir: /public_html/
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
    
    - name: Deploy Backend
      if: ${{ inputs.deploy_backend }}
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.HOSTINGER_FTP_HOST }}
        username: ${{ secrets.HOSTINGER_FTP_USERNAME }}
        password: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
        local-dir: ./backend/
        server-dir: /backend/
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/logs/**
    
    - name: Run Database Migrations
      if: ${{ inputs.run_migrations }}
      run: |
        echo "Database migrations would run here"
        echo "Please manually import schema.sql via phpMyAdmin"
    
    - name: Health Check
      run: |
        echo "ðŸš€ GenZFlow Manual Deployment Complete!"
        echo "Environment: ${{ inputs.environment }}"
        echo "Frontend Deployed: ${{ inputs.deploy_frontend }}"
        echo "Backend Deployed: ${{ inputs.deploy_backend }}"
        echo "Migrations Run: ${{ inputs.run_migrations }}"
        echo ""
        echo "Next Steps:"
        echo "1. Check https://genzflow.genzspace.in for frontend"
        echo "2. Check https://genzflow.genzspace.in:5000/api/health for backend"
        echo "3. Import database schema via phpMyAdmin if needed"
